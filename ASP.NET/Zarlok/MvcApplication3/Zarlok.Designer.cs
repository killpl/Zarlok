//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("Zarlok", "food_categoryid_fkey", "category", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(MvcApplication3.category), "food", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MvcApplication3.food), true)]
[assembly: EdmRelationshipAttribute("Zarlok", "eaten_foodid_fkey", "food", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(MvcApplication3.food), "eaten", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MvcApplication3.eaten), true)]

#endregion

namespace MvcApplication3
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class ZarlokEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new ZarlokEntities object using the connection string found in the 'ZarlokEntities' section of the application configuration file.
        /// </summary>
        public ZarlokEntities() : base("name=ZarlokEntities", "ZarlokEntities")
        {
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new ZarlokEntities object.
        /// </summary>
        public ZarlokEntities(string connectionString) : base(connectionString, "ZarlokEntities")
        {
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new ZarlokEntities object.
        /// </summary>
        public ZarlokEntities(EntityConnection connection) : base(connection, "ZarlokEntities")
        {
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<profile> profile
        {
            get
            {
                if ((_profile == null))
                {
                    _profile = base.CreateObjectSet<profile>("profile");
                }
                return _profile;
            }
        }
        private ObjectSet<profile> _profile;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<category> category
        {
            get
            {
                if ((_category == null))
                {
                    _category = base.CreateObjectSet<category>("category");
                }
                return _category;
            }
        }
        private ObjectSet<category> _category;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<food> food
        {
            get
            {
                if ((_food == null))
                {
                    _food = base.CreateObjectSet<food>("food");
                }
                return _food;
            }
        }
        private ObjectSet<food> _food;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<eaten> eaten
        {
            get
            {
                if ((_eaten == null))
                {
                    _eaten = base.CreateObjectSet<eaten>("eaten");
                }
                return _eaten;
            }
        }
        private ObjectSet<eaten> _eaten;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<achievement> achievement
        {
            get
            {
                if ((_achievement == null))
                {
                    _achievement = base.CreateObjectSet<achievement>("achievement");
                }
                return _achievement;
            }
        }
        private ObjectSet<achievement> _achievement;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<profileachievement> profileachievement
        {
            get
            {
                if ((_profileachievement == null))
                {
                    _profileachievement = base.CreateObjectSet<profileachievement>("profileachievement");
                }
                return _profileachievement;
            }
        }
        private ObjectSet<profileachievement> _profileachievement;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<friendship> friendship
        {
            get
            {
                if ((_friendship == null))
                {
                    _friendship = base.CreateObjectSet<friendship>("friendship");
                }
                return _friendship;
            }
        }
        private ObjectSet<friendship> _friendship;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<request> request
        {
            get
            {
                if ((_request == null))
                {
                    _request = base.CreateObjectSet<request>("request");
                }
                return _request;
            }
        }
        private ObjectSet<request> _request;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the profile EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToprofile(profile profile)
        {
            base.AddObject("profile", profile);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the category EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTocategory(category category)
        {
            base.AddObject("category", category);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the food EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTofood(food food)
        {
            base.AddObject("food", food);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the eaten EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToeaten(eaten eaten)
        {
            base.AddObject("eaten", eaten);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the achievement EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToachievement(achievement achievement)
        {
            base.AddObject("achievement", achievement);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the profileachievement EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToprofileachievement(profileachievement profileachievement)
        {
            base.AddObject("profileachievement", profileachievement);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the friendship EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTofriendship(friendship friendship)
        {
            base.AddObject("friendship", friendship);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the request EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTorequest(request request)
        {
            base.AddObject("request", request);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Zarlok", Name="achievement")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class achievement : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new achievement object.
        /// </summary>
        /// <param name="id">Initial value of the id property.</param>
        public static achievement Createachievement(global::System.Int64 id)
        {
            achievement achievement = new achievement();
            achievement.id = id;
            return achievement;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value, "id");
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int64 _id;
        partial void OnidChanging(global::System.Int64 value);
        partial void OnidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = StructuralObject.SetValidValue(value, true, "name");
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Zarlok", Name="category")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class category : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new category object.
        /// </summary>
        /// <param name="id">Initial value of the id property.</param>
        public static category Createcategory(global::System.Int64 id)
        {
            category category = new category();
            category.id = id;
            return category;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value, "id");
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int64 _id;
        partial void OnidChanging(global::System.Int64 value);
        partial void OnidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = StructuralObject.SetValidValue(value, true, "name");
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Zarlok", "food_categoryid_fkey", "food")]
        public EntityCollection<food> food
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<food>("Zarlok.food_categoryid_fkey", "food");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<food>("Zarlok.food_categoryid_fkey", "food", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Zarlok", Name="eaten")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class eaten : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new eaten object.
        /// </summary>
        /// <param name="id">Initial value of the id property.</param>
        public static eaten Createeaten(global::System.Int64 id)
        {
            eaten eaten = new eaten();
            eaten.id = id;
            return eaten;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value, "id");
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int64 _id;
        partial void OnidChanging(global::System.Int64 value);
        partial void OnidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> foodid
        {
            get
            {
                return _foodid;
            }
            set
            {
                OnfoodidChanging(value);
                ReportPropertyChanging("foodid");
                _foodid = StructuralObject.SetValidValue(value, "foodid");
                ReportPropertyChanged("foodid");
                OnfoodidChanged();
            }
        }
        private Nullable<global::System.Int64> _foodid;
        partial void OnfoodidChanging(Nullable<global::System.Int64> value);
        partial void OnfoodidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> profileid
        {
            get
            {
                return _profileid;
            }
            set
            {
                OnprofileidChanging(value);
                ReportPropertyChanging("profileid");
                _profileid = StructuralObject.SetValidValue(value, "profileid");
                ReportPropertyChanged("profileid");
                OnprofileidChanged();
            }
        }
        private Nullable<global::System.Int64> _profileid;
        partial void OnprofileidChanging(Nullable<global::System.Int64> value);
        partial void OnprofileidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> date
        {
            get
            {
                return _date;
            }
            set
            {
                OndateChanging(value);
                ReportPropertyChanging("date");
                _date = StructuralObject.SetValidValue(value, "date");
                ReportPropertyChanged("date");
                OndateChanged();
            }
        }
        private Nullable<global::System.DateTime> _date;
        partial void OndateChanging(Nullable<global::System.DateTime> value);
        partial void OndateChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Zarlok", "eaten_foodid_fkey", "food")]
        public food food
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<food>("Zarlok.eaten_foodid_fkey", "food").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<food>("Zarlok.eaten_foodid_fkey", "food").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<food> foodReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<food>("Zarlok.eaten_foodid_fkey", "food");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<food>("Zarlok.eaten_foodid_fkey", "food", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Zarlok", Name="food")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class food : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new food object.
        /// </summary>
        /// <param name="id">Initial value of the id property.</param>
        public static food Createfood(global::System.Int64 id)
        {
            food food = new food();
            food.id = id;
            return food;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value, "id");
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int64 _id;
        partial void OnidChanging(global::System.Int64 value);
        partial void OnidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = StructuralObject.SetValidValue(value, true, "name");
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> calories
        {
            get
            {
                return _calories;
            }
            set
            {
                OncaloriesChanging(value);
                ReportPropertyChanging("calories");
                _calories = StructuralObject.SetValidValue(value, "calories");
                ReportPropertyChanged("calories");
                OncaloriesChanged();
            }
        }
        private Nullable<global::System.Int32> _calories;
        partial void OncaloriesChanging(Nullable<global::System.Int32> value);
        partial void OncaloriesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> categoryid
        {
            get
            {
                return _categoryid;
            }
            set
            {
                OncategoryidChanging(value);
                ReportPropertyChanging("categoryid");
                _categoryid = StructuralObject.SetValidValue(value, "categoryid");
                ReportPropertyChanged("categoryid");
                OncategoryidChanged();
            }
        }
        private Nullable<global::System.Int64> _categoryid;
        partial void OncategoryidChanging(Nullable<global::System.Int64> value);
        partial void OncategoryidChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Zarlok", "food_categoryid_fkey", "category")]
        public category category
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<category>("Zarlok.food_categoryid_fkey", "category").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<category>("Zarlok.food_categoryid_fkey", "category").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<category> categoryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<category>("Zarlok.food_categoryid_fkey", "category");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<category>("Zarlok.food_categoryid_fkey", "category", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Zarlok", "eaten_foodid_fkey", "eaten")]
        public EntityCollection<eaten> eaten
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<eaten>("Zarlok.eaten_foodid_fkey", "eaten");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<eaten>("Zarlok.eaten_foodid_fkey", "eaten", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Zarlok", Name="friendship")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class friendship : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new friendship object.
        /// </summary>
        /// <param name="id">Initial value of the id property.</param>
        public static friendship Createfriendship(global::System.Int64 id)
        {
            friendship friendship = new friendship();
            friendship.id = id;
            return friendship;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value, "id");
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int64 _id;
        partial void OnidChanging(global::System.Int64 value);
        partial void OnidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> sender
        {
            get
            {
                return _sender;
            }
            set
            {
                OnsenderChanging(value);
                ReportPropertyChanging("sender");
                _sender = StructuralObject.SetValidValue(value, "sender");
                ReportPropertyChanged("sender");
                OnsenderChanged();
            }
        }
        private Nullable<global::System.Int64> _sender;
        partial void OnsenderChanging(Nullable<global::System.Int64> value);
        partial void OnsenderChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> receiver
        {
            get
            {
                return _receiver;
            }
            set
            {
                OnreceiverChanging(value);
                ReportPropertyChanging("receiver");
                _receiver = StructuralObject.SetValidValue(value, "receiver");
                ReportPropertyChanged("receiver");
                OnreceiverChanged();
            }
        }
        private Nullable<global::System.Int64> _receiver;
        partial void OnreceiverChanging(Nullable<global::System.Int64> value);
        partial void OnreceiverChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Zarlok", Name="profile")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class profile : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new profile object.
        /// </summary>
        /// <param name="id">Initial value of the id property.</param>
        /// <param name="login">Initial value of the login property.</param>
        /// <param name="password">Initial value of the password property.</param>
        public static profile Createprofile(global::System.Int64 id, global::System.String login, global::System.String password)
        {
            profile profile = new profile();
            profile.id = id;
            profile.login = login;
            profile.password = password;
            return profile;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value, "id");
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int64 _id;
        partial void OnidChanging(global::System.Int64 value);
        partial void OnidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String login
        {
            get
            {
                return _login;
            }
            set
            {
                if (_login != value)
                {
                    OnloginChanging(value);
                    ReportPropertyChanging("login");
                    _login = StructuralObject.SetValidValue(value, false, "login");
                    ReportPropertyChanged("login");
                    OnloginChanged();
                }
            }
        }
        private global::System.String _login;
        partial void OnloginChanging(global::System.String value);
        partial void OnloginChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String password
        {
            get
            {
                return _password;
            }
            set
            {
                if (_password != value)
                {
                    OnpasswordChanging(value);
                    ReportPropertyChanging("password");
                    _password = StructuralObject.SetValidValue(value, false, "password");
                    ReportPropertyChanged("password");
                    OnpasswordChanged();
                }
            }
        }
        private global::System.String _password;
        partial void OnpasswordChanging(global::System.String value);
        partial void OnpasswordChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String firstname
        {
            get
            {
                return _firstname;
            }
            set
            {
                OnfirstnameChanging(value);
                ReportPropertyChanging("firstname");
                _firstname = StructuralObject.SetValidValue(value, true, "firstname");
                ReportPropertyChanged("firstname");
                OnfirstnameChanged();
            }
        }
        private global::System.String _firstname;
        partial void OnfirstnameChanging(global::System.String value);
        partial void OnfirstnameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String surname
        {
            get
            {
                return _surname;
            }
            set
            {
                OnsurnameChanging(value);
                ReportPropertyChanging("surname");
                _surname = StructuralObject.SetValidValue(value, true, "surname");
                ReportPropertyChanged("surname");
                OnsurnameChanged();
            }
        }
        private global::System.String _surname;
        partial void OnsurnameChanging(global::System.String value);
        partial void OnsurnameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> type
        {
            get
            {
                return _type;
            }
            set
            {
                OntypeChanging(value);
                ReportPropertyChanging("type");
                _type = StructuralObject.SetValidValue(value, "type");
                ReportPropertyChanged("type");
                OntypeChanged();
            }
        }
        private Nullable<global::System.Boolean> _type;
        partial void OntypeChanging(Nullable<global::System.Boolean> value);
        partial void OntypeChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Zarlok", Name="profileachievement")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class profileachievement : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new profileachievement object.
        /// </summary>
        /// <param name="id">Initial value of the id property.</param>
        public static profileachievement Createprofileachievement(global::System.Int64 id)
        {
            profileachievement profileachievement = new profileachievement();
            profileachievement.id = id;
            return profileachievement;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value, "id");
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int64 _id;
        partial void OnidChanging(global::System.Int64 value);
        partial void OnidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> profileid
        {
            get
            {
                return _profileid;
            }
            set
            {
                OnprofileidChanging(value);
                ReportPropertyChanging("profileid");
                _profileid = StructuralObject.SetValidValue(value, "profileid");
                ReportPropertyChanged("profileid");
                OnprofileidChanged();
            }
        }
        private Nullable<global::System.Int64> _profileid;
        partial void OnprofileidChanging(Nullable<global::System.Int64> value);
        partial void OnprofileidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> date
        {
            get
            {
                return _date;
            }
            set
            {
                OndateChanging(value);
                ReportPropertyChanging("date");
                _date = StructuralObject.SetValidValue(value, "date");
                ReportPropertyChanged("date");
                OndateChanged();
            }
        }
        private Nullable<global::System.DateTime> _date;
        partial void OndateChanging(Nullable<global::System.DateTime> value);
        partial void OndateChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Zarlok", Name="request")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class request : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new request object.
        /// </summary>
        /// <param name="id">Initial value of the id property.</param>
        public static request Createrequest(global::System.Int64 id)
        {
            request request = new request();
            request.id = id;
            return request;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value, "id");
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int64 _id;
        partial void OnidChanging(global::System.Int64 value);
        partial void OnidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> sender
        {
            get
            {
                return _sender;
            }
            set
            {
                OnsenderChanging(value);
                ReportPropertyChanging("sender");
                _sender = StructuralObject.SetValidValue(value, "sender");
                ReportPropertyChanged("sender");
                OnsenderChanged();
            }
        }
        private Nullable<global::System.Int64> _sender;
        partial void OnsenderChanging(Nullable<global::System.Int64> value);
        partial void OnsenderChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> receiver
        {
            get
            {
                return _receiver;
            }
            set
            {
                OnreceiverChanging(value);
                ReportPropertyChanging("receiver");
                _receiver = StructuralObject.SetValidValue(value, "receiver");
                ReportPropertyChanged("receiver");
                OnreceiverChanged();
            }
        }
        private Nullable<global::System.Int64> _receiver;
        partial void OnreceiverChanging(Nullable<global::System.Int64> value);
        partial void OnreceiverChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> sent
        {
            get
            {
                return _sent;
            }
            set
            {
                OnsentChanging(value);
                ReportPropertyChanging("sent");
                _sent = StructuralObject.SetValidValue(value, "sent");
                ReportPropertyChanged("sent");
                OnsentChanged();
            }
        }
        private Nullable<global::System.DateTime> _sent;
        partial void OnsentChanging(Nullable<global::System.DateTime> value);
        partial void OnsentChanged();

        #endregion

    }

    #endregion

}
